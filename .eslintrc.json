{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx", "react-hooks", "unused-imports"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "strict": "off"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {
        // causes false-positive with React.Memo: https://github.com/yannickcr/eslint-plugin-react/issues/2105
        "react/display-name": "off",
        // typescript covers types
        "react/prop-types": "off",
        "prefer-const": "warn",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/prefer-interface": "off",
        "@typescript-eslint/type-annotation-spacing": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/no-object-literal-type-assertion": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        // we use empty interfaces in old-style API backend
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "varsIgnorePattern": "^(moduleLogger)$",
            "argsIgnorePattern": "^props$"
          }
        ],
        "@typescript-eslint/no-explicit-any": [
          "warn",
          { "ignoreRestArgs": true }
        ],
        "@typescript-eslint/ban-types": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "error",
        "react/no-unescaped-entities": "off",
        "no-warning-comments": "warn",
        "no-debugger": "warn",
        "no-console": "warn",
        "no-restricted-globals": "off",
        "###": "off",
        "no-empty-pattern": "off",
        "eqeqeq": "off",
        "no-extra-boolean-cast": "off",
        "@typescript-eslint/no-useless-constructor": "off",
        "jsx-a11y/accessible-emoji": "off",
        "react/jsx-no-useless-fragment": "off",
        "array-callback-return": "off",
        "no-useless-escape": "off",
        "no-useless-computed-key": "off",
        "no-ex-assign": "off",
        "no-useless-concat": "off",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "off",
        "no-loop-func": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
